{
    "name": "Name",
    "@name": {
        "description": "First name of user"
    },
    "iAcceptThe": "I accept the",
    "@iAcceptThe": {
        "description": "Start of sentence for accepting the terms and conditions"
    },
    "termsAndConditions": "Terms and Conditions",
    "@termsAndConditions": {
        "description": "Link to the terms and conditions of the app"
    },
    "email": "Email",
    "@email": {
        "descripiton": "email address"
    },
    "password": "Password",
    "@password": {
        "descripiton": "user password"
    },
    "tooShort": "Too short",
    "@tooShort": {
        "descripiton": "Input is too short"
    },
    "invalid": "Invalid",
    "@invalid": {
        "descripiton": "Invalid input"
    },
    "invalidDate": "Invalid date",
    "@invalidDate": {
        "descripiton": "Invalid date input"
    },
    "notThatOld": "You're not that old",
    "@notThatOld": {
        "descripiton": "Date input too far in the past"
    },
    "mustBe18": "You must be at least 18 years old!",
    "@mustBe18": {
        "descripiton": "Users must be 18 years old or older to use the app"
    },
    "logIn": "Log in",
    "@logIn": {
        "descripiton": "log in to account"
    },
    "logOut": "Log out",
    "@logOut": {
        "descripiton": "log out of account"
    },
    "logInInstead": "Log in instead",
    "@logInInstead": {
        "descripiton": "Button for when the user already has an account"
    },
    "btnBack": "< Back",
    "@btnBack": {
        "descripiton": "Button to go back to previous screen"
    },
    "btnNext": "Next >",
    "@btnNext": {
        "descripiton": "Button to go to next screen"
    },
    "year": "Year",
    "@year": {
        "descripiton": "Year field in date"
    },
    "month": "Month",
    "@month": {
        "descripiton": "Month field in date"
    },
    "day": "Day",
    "@day": {
        "description": "Day field in date"
    },
    "accept": "Accept",
    "@accept": {
        "descripiton": "Button to accept"
    },
    "codexRespect": "Respect everyone in the community",
    "@codexRespect": {
        "descripiton": "Community guidline about respect"
    },
    "codexPrivacy": "Only share what you want other users to see",
    "@codexPrivacy": {
        "descripiton": "Comminity guidline about personal privacy"
    },
    "codexAuthenticity": "Be authentic and honest",
    "@codexAuthenticity": {
        "descripiton": "Community guidline about authenticity"
    },
    "finish": "Finish",
    "@finish": {
        "descripiton": "Last button to press after process"
    },
    "registerHelpTextName": "This is how you will appear to other users.",
    "@registerHelpTextName": {
        "description": "Registration help text for name screen"
    },
    "registerHelpTextBDay": "Please tell us when you were born.",
    "@registerHelpTextBDay": {
        "description": "Registration help text for birthday"
    },
    "registerHelpTextCredentials": "Please fill in your credentials to create your account.",
    "@registerHelpTextCredentials": {
        "description": "Registration help text for email & password screen"
    },
    "nameCantBeEmpty": "Name can't be empty",
    "@nameCantBeEmpty": {
        "description": "Name validation error"
    },
    "exceptionNetworkRequestFailed": "A connection issue has occured. Please make sure that you have a stable connection to the internet.",
    "@exceptionNetworkRequestFailed": {
        "description": "Exception thrown on network error"
    },
    "exceptionAccountAlreadyExists": "Account already exists",
    "@exceptionAccountAlreadyExists": {
        "description": "Exception thrown when trying to create account with already existing credentials"
    },
    "exceptionInvalidEmail": "Invalid email address",
    "@exceptionInvalidEmail": {
        "description": "Exception thrown when using an invalid email format"
    },
    "exceptionWeakPassword": "Weak password",
    "@exceptionWeakPassword": {
        "description": "Exception thrown when using a weak password"
    },
    "exceptionUserDisabled": "User account is disabled",
    "@exceptionUserDisabled": {
        "description": "Exception thrown when user account has been disabled"
    },
    "exceptionUserNotFound": "User not found",
    "@exceptionUserNotFound": {
        "description": "Exception thrown when user account is not found in backend"
    },
    "exceptionWrongPassword": "Password is not correct",
    "@exceptionWrongPassword": {
        "description": "Exception thrown when trying to log in with wrong password"
    },
    "unexpectedErrorOccured": "An unexpected error occurred",
    "@unexpectedErrorOccured": {
        "description": "Default error message"
    },
    "somethingWentWrong": "Something went wrong",
    "@somethingWentWrong": {
        "description": "Message when something doesn't go as planned"
    },
    "profile": "Profile",
    "@profile": {
        "descripiton": "user profile"
    },
    "map": "Map",
    "@map": {
        "descripiton": "map to view other users"
    }
}
